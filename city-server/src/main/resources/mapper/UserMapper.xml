<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sixcity.mapper.UserMapper">

    <sql id="selectUserAndMerchant">
        SELECT
            a.id,
            a.username,
            a.password,
            a.phone,
            a.email,
            a.actualName,
            a.accountType,
            a.companyName,
            a.createTime,
            a.updateTime,
            a.amount,
            a.AppId,
            a.roles,
            b.AppKey,
            b.AppSecret
        FROM User_t a LEFT JOIN
            Merchant_t b ON
                             a.AppId = b.AppId
    </sql>

    <sql id="selectUser">
        SELECT
            a.id,
            a.username,
            a.password,
            a.phone,
            a.email,
            a.actualName,
            a.accountType,
            a.companyName,
            a.createTime,
            a.updateTime,
            a.amount,
            a.AppId,
            a.roles
        FROM User_t a
    </sql>

    <sql id="selectMerchant">
        SELECT
            a.id,
            a.AppId,
            a.AppKey,
            a.AppSecret,
            a.createTime,
            a.updateTime
        FROM Merchant_t a
    </sql>

    <!-- 插入用户 -->
    <insert id="insert">
        INSERT INTO User_t (
            `UserName`,
            `Password`,
            `Phone`,
            `Email`,
            `ActualName`,
            `AccountType`,
            `CompanyName`,
            `CreateTime`,
            `UpdateTime`,
            `Amount`,
            `AppId`,
            `Roles`
        ) VALUES (
            #{username},
            #{password},
            #{phone},
            #{email},
            #{actualName},
            #{accountType},
            #{companyName},
            #{createTime},
            #{updateTime},
            #{amount},
            #{appId},
            #{roles}
        )
    </insert>

    <!-- 插入商户 -->
    <insert id="insertMerchant">
        INSERT INTO Merchant_t (
            `AppId`,
            `AppKey`,
            `AppSecret`,
            `CreateTime`,
            `UpdateTime`
        ) VALUES (
            #{appId},
            #{appKey},
            #{appSecret},
            #{createTime},
            #{updateTime}
        )
    </insert>


    <!-- 查找商户用户 -->
    <select id="findMerchantUserById" resultType="org.sixcity.domain.dto.view.MerchantUser">
        <include refid="selectUserAndMerchant"/>
        WHERE a.Id = #{id}
    </select>
    <select id="findMerchantUserByAppKey" resultType="org.sixcity.domain.User">
        <include refid="selectUserAndMerchant"/>
        WHERE b.AppKey = #{appKey}
    </select>

    <!-- 查找用户 -->
    <select id="findByUsername" resultType="org.sixcity.domain.User">
        <include refid="selectUser"/>
        WHERE UserName = #{username}
    </select>
    <select id="findById" resultType="org.sixcity.domain.User">
        <include refid="selectUser"/>
        WHERE Id = #{id}
    </select>

    <!-- 查找商户 -->
    <select id="findByAppId" resultType="org.sixcity.domain.Merchant">
        <include refid="selectMerchant"/>
        WHERE AppId = #{appId}
    </select>

    <!-- 获取所有商户-->
    <select id="getAllMerchant" resultType="org.sixcity.domain.User">
        <include refid="selectUser"/>
        WHERE Roles = 'ROLE_USER'
    </select>

    <!-- 获取没有进行统计的用户-->
    <select id="getAllRebatingUser" resultType="org.sixcity.domain.User">
        <include refid="selectUser"/>
        WHERE a.Roles = 'ROLE_USER' AND a.Id NOT IN (
        SELECT p.UserId FROM Rebate_Produce_t p
        <where>
            <![CDATA[
            ProduceDate >= #{startTime} AND ProduceDate < #{endTime})
            ]]>
        </where>
    </select>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE User_t
        SET
            `Password` = #{password}
        WHERE `Id` = #{id}
    </update>

    <!-- 更新用户信息 -->
    <update id="updateUser">
        UPDATE User_t
        SET
            `Email`      = #{email},
            `Phone`      = #{phone},
            `UpdateTime` = #{updateTime}
        WHERE `Id` = #{id}
    </update>

    <!-- 更新用户余额 -->
    <update id="updateAmount">
        UPDATE User_t
        SET
            `Amount` = #{amount}
        WHERE `Id` = #{id}
    </update>

</mapper>
