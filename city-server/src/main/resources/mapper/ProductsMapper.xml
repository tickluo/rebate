<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sixcity.mapper.ProductsMapper">

    <sql id="selectColumns">
        SELECT
            a.Id,
            a.ItemId,
            a.TransId,
            a.AppId,
            a.Name,
            a.Url,
            a.Quantity,
            a.Price,
            a.Currency,
            a.ActuallyPay,
            a.RebatePoint,
            a.RebateTotalPrice,
            a.Settlemented,
            a.SettlementState,
            a.SettlementTime,
            a.ProductStatus,
            a.OrderTime,
            a.ArrivedTime,
            a.TransTime,
            a.CancelTime,
            a.CreateTime,
            a.UpdateTime
        FROM Product_t a
    </sql>

    <!-- 插入商品信息 -->
    <insert id="insert">
        INSERT INTO Product_t (
            ItemId,
            TransId,
            AppId,
            Name,
            Url,
            Quantity,
            Price,
            currency,
            ActuallyPay,
            RebatePoint,
            RebateTotalPrice,
            Settlemented,
            SettlementState,
            SettlementTime,
            ProductStatus,
            OrderTime,
            ArrivedTime,
            TransTime,
            CancelTime,
            CreateTime,
            UpdateTime
        ) VALUES (
            #{itemId},
            #{transId},
            #{appId},
            #{name},
            #{url},
            #{quantity},
            #{price},
            #{currency},
            #{actuallyPay},
            #{rebatePoint},
            #{rebateTotalPrice},
            #{settlemented},
            #{settlementState},
            #{settlementTime},
            #{productStatus},
            #{orderTime},
            #{arrivedTime},
            #{transTime},
            #{cancelTime},
            #{createTime},
            #{updateTime}
        )
    </insert>

    <!-- 更新商品信息 -->
    <update id="update">
        UPDATE Product_t
        SET
            ItemId           = #{itemId},
            Name             = #{name},
            Url              = #{url},
            Quantity         = #{quantity},
            Price            = #{price},
            currency         = #{currency},
            ActuallyPay      = #{actuallyPay},
            RebatePoint      = #{rebatePoint},
            RebateTotalPrice = #{rebateTotalPrice},
            Settlemented     = #{settlemented},
            SettlementState  = #{settlementState},
            SettlementTime   = #{settlementTime},
            ProductStatus    = #{productStatus},
            OrderTime        = #{orderTime},
            ArrivedTime      = #{arrivedTime},
            TransTime        = #{transTime},
            CancelTime       = #{cancelTime},
            UpdateTime       = #{updateTime}
        WHERE TransId = #{transId}
    </update>

    <select id="findByTransId" resultType="org.sixcity.domain.Product">
        <include refid="selectColumns"/>
        WHERE TransId = #{transId}
    </select>

    <!-- 查找日期报表信息 -->
    <select id="getDateReportList" statementType="CALLABLE" resultType="org.sixcity.domain.dto.view.DateReport">
         <![CDATA[
        {CALL proc_DataReport(
                #{timeType,mode=IN,jdbcType=INTEGER},
                #{appId,mode=IN,jdbcType=INTEGER},
                #{startTime,mode=IN,jdbcType=VARCHAR},
                #{endTime,mode=IN,jdbcType=VARCHAR}
        )}
        ]]>
    </select>

    <!-- 查询商品列表-->
    <select id="findList" resultType="org.sixcity.domain.Product">
        <include refid="selectColumns"/>
        WHERE
        1 = 1
        <if test="condition.appId!=null">
            and AppId = #{condition.appId}
        </if>
        <if test="condition.itemId != null and condition.itemId != ''">
            and ItemId = #{condition.itemId}
        </if>
        <if test="condition.startTime!=null">
            <if test="condition.timeType == 0">
                and ( OrderTime &gt;= #{condition.startTime} OR TransTime &gt;= #{condition.startTime})
            </if>
            <if test="condition.timeType == 1">
                and OrderTime &gt;= #{condition.startTime}
            </if>
            <if test="condition.timeType == 2">
                and TransTime &gt;= #{condition.startTime}
            </if>
        </if>
        <if test="condition.endTime!=null">
            <if test="condition.timeType == 0">
                and ( OrderTime &lt; #{condition.endTime} OR TransTime &lt; #{condition.endTime})
            </if>
            <if test="condition.timeType == 1">
                and OrderTime &lt; #{condition.endTime}
            </if>
            <if test="condition.timeType == 2">
                and TransTime &lt; #{condition.endTime}
            </if>
        </if>
        <if test="condition.productStatus != null and condition.productStatus != 0">
            and ProductStatus = #{condition.productStatus}
        </if>
        <choose>
            <when test="condition.orderBy != null and condition.orderBy != ''">
                ORDER BY ${condition.orderBy}
            </when>
            <otherwise>
                ORDER BY OrderTime DESC
            </otherwise>
        </choose>

    </select>

    <!-- 查询商品列表in Status-->
    <select id="findListInStatus" resultType="org.sixcity.domain.Product">
        <include refid="selectColumns"/>
        WHERE
        <if test="condition.appId!=null">
            AppId = #{condition.appId}
        </if>
        <if test="condition.startTime!=null">
            and ( ArrivedTime &gt;= #{condition.startTime} OR TransTime &gt;= #{condition.startTime})
        </if>
        <if test="condition.endTime!=null">
            and ( ArrivedTime &lt; #{condition.endTime} OR TransTime &lt; #{condition.endTime})
        </if>
        <if test="condition.productStatus != null and condition.productStatus.size() > 0">
            and ProductStatus in
            <foreach item="item" index="index" collection="condition.productStatus" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and Settlemented = 0
        ORDER BY OrderTime DESC
    </select>
</mapper>
